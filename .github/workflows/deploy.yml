# .github/workflows/deploy.yml
name: 🚀 Deploy MarketJoyas API

on:
  push:
    branches: [main]

# 🔥 AGREGA ESTO - Variables de entorno globales
env:
  LIGHTSAIL_HOST: ${{ secrets.LIGHTSAIL_HOST }}
  LIGHTSAIL_USER: ${{ secrets.LIGHTSAIL_USER }}
  LIGHTSAIL_SSH_KEY: ${{ secrets.LIGHTSAIL_SSH_KEY }}
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  JWT_EXPIRES_IN: ${{ secrets.JWT_EXPIRES_IN }}
  CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
  CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
  CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: ⚙️ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: 📦 Install dependencies
      run: npm ci --include=dev  

    - name: 🗄️ Generate Prisma
      run: npx prisma generate

    - name: 🧪 Run tests
      run: npm test
      env:
        DATABASE_URL: mysql://root:test@localhost:3306/test_db
        JWT_SECRET: test_jwt_secret_for_tests
        JWT_EXPIRES_IN: 1d
        CLOUDINARY_CLOUD_NAME: test_cloud
        CLOUDINARY_API_KEY: test_key_123
        CLOUDINARY_API_SECRET: test_secret_abc

    - name: 🏗️ Build application
      run: NODE_OPTIONS="--max-old-space-size=4096" npm run build

    # 🔍 DEBUG MEJORADO
    - name: 🔍 Debug Secrets
      run: |
        echo "=== INFORMACIÓN DEL REPOSITORIO ==="
        echo "Repo: ${{ github.repository }}"
        echo "Ref: ${{ github.ref }}"
        
        echo "=== SECRETS (usando env) ==="
        echo "LIGHTSAIL_HOST: '$LIGHTSAIL_HOST'"
        echo "LIGHTSAIL_USER: '$LIGHTSAIL_USER'"
        echo "SSH_KEY length: ${#LIGHTSAIL_SSH_KEY}"
        
        # Verifica que los secrets no estén vacíos
        if [ -z "$LIGHTSAIL_HOST" ]; then
          echo "❌ ERROR: LIGHTSAIL_HOST está vacío!"
          exit 1
        fi

        if [ -z "$LIGHTSAIL_USER" ]; then
          echo "❌ ERROR: LIGHTSAIL_USER está vacío!"
          exit 1
        fi

        if [ -z "$LIGHTSAIL_SSH_KEY" ]; then
          echo "❌ ERROR: LIGHTSAIL_SSH_KEY está vacío!"
          exit 1
        fi

        echo "✅ Todos los secrets están presentes"

    - name: 🚀 Deploy to Lightsail
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ env.LIGHTSAIL_HOST }}  # ← Usa env en lugar de secrets
        username: ${{ env.LIGHTSAIL_USER }}  # ← Usa env
        key: ${{ env.LIGHTSAIL_SSH_KEY }}  # ← Usa env
        key_path: /tmp/ssh_key
        script: |
          # Primero guarda la clave
          cat > /tmp/ssh_key << 'EOF'
          ${{ env.LIGHTSAIL_SSH_KEY }}  # ← Usa env
          EOF
          chmod 600 /tmp/ssh_key
          
          # Configura SSH
          mkdir -p ~/.ssh
          echo "IdentityFile /tmp/ssh_key" >> ~/.ssh/config
          ssh-keyscan -H ${{ env.LIGHTSAIL_HOST }} >> ~/.ssh/known_hosts 2>/dev/null  # ← Usa env
          
          # Ahora el script principal
          cd ~/backend/project-marketjoyas-backend
          
          echo "📥 Actualizando código..."
          git fetch --all
          git reset --hard origin/main
          
          echo "📦 Instalando dependencias..."
          npm install --production
          
          echo "🗄️ Generando Prisma..."
          npx prisma generate
          
          echo "🔄 Aplicando migraciones..."
          npx prisma migrate deploy
          
          echo "🏗️ Building proyecto..."
          NODE_OPTIONS="--max-old-space-size=4096" npm run build
          
          echo "📝 Configurando environment variables..."
          echo "DATABASE_URL=\"${{ env.DATABASE_URL }}\"" > .env  # ← Usa env
          echo "JWT_SECRET=\"${{ env.JWT_SECRET }}\"" >> .env  # ← Usa env
          echo "JWT_EXPIRES_IN=\"${{ env.JWT_EXPIRES_IN }}\"" >> .env  # ← Usa env
          echo "CLOUDINARY_CLOUD_NAME=\"${{ env.CLOUDINARY_CLOUD_NAME }}\"" >> .env  # ← Usa env
          echo "CLOUDINARY_API_KEY=\"${{ env.CLOUDINARY_API_KEY }}\"" >> .env  # ← Usa env
          echo "CLOUDINARY_API_SECRET=\"${{ env.CLOUDINARY_API_SECRET }}\"" >> .env  # ← Usa env
          echo "NODE_ENV=production" >> .env
          echo "PORT=3000" >> .env
          
          echo "🔄 Reiniciando API..."
          pm2 restart marketjoyas-api || pm2 start dist/main.js --name marketjoyas-api
          
          echo "✅ Deploy completado!"
          pm2 status