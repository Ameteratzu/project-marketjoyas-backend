{
  "openapi": "3.0.0",
  "paths": {
    "/api/usuarios/registro/cliente": {
      "post": {
        "operationId": "UsuariosController_crearCliente",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CrearClienteDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Usuarios"
        ]
      }
    },
    "/api/usuarios/registro/vendedor": {
      "post": {
        "operationId": "UsuariosController_crearVendedor",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CrearVendedorDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "tags": [
          "Usuarios"
        ]
      }
    },
    "/api/usuarios/registro/demovendedor": {
      "post": {
        "operationId": "UsuariosController_crearDemoVendedor",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CrearDemoVendedorDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "Para crear usuario de DEMOVENDEDOR, se usa en formulario de UNETE A NOSOTROS",
        "tags": [
          "Usuarios"
        ]
      }
    },
    "/api/usuarios/registro/trabajador": {
      "post": {
        "operationId": "UsuariosController_crearTrabajador",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CrearTrabajadorDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Usuarios"
        ]
      }
    },
    "/api/usuarios/actualizar/info": {
      "patch": {
        "operationId": "UsuariosController_actualizarInfo",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActualizarInfoDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Actualiza toda la info de un cliente",
        "tags": [
          "Usuarios"
        ]
      }
    },
    "/api/usuarios/actualizar/direccion": {
      "patch": {
        "operationId": "UsuariosController_actualizarDireccion",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActualizarDireccionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Actualiza especificamente la direccion legal de un usuario",
        "tags": [
          "Usuarios"
        ]
      }
    },
    "/api/usuarios/actualizar/foto": {
      "patch": {
        "operationId": "UsuariosController_actualizarFotoPerfil",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActualizarFotoDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Actualiza especificamente la foto de un usuario",
        "tags": [
          "Usuarios"
        ]
      }
    },
    "/api/usuarios/registro/admin": {
      "post": {
        "operationId": "UsuariosController_crearAdmin",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CrearPrimerAdminDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Crea un nuevo usuario ADMIN",
        "tags": [
          "Usuarios"
        ]
      }
    },
    "/api/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/auth/oauth/google": {
      "get": {
        "operationId": "OAuthController_googleAuth",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "OAuth"
        ]
      }
    },
    "/api/auth/oauth/google/redirect": {
      "get": {
        "operationId": "OAuthController_googleAuthRedirect",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "OAuth"
        ]
      }
    },
    "/api/productos": {
      "post": {
        "operationId": "ProductosController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CrearProductoDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Un VENDEDOR o TRABAJADOR añaden un producto",
        "tags": [
          "Productos"
        ]
      },
      "get": {
        "operationId": "ProductosController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "summary": "Obtener todos los productos (público)",
        "tags": [
          "Productos"
        ]
      }
    },
    "/api/productos/buscar": {
      "get": {
        "operationId": "ProductosController_buscarPorNombre",
        "parameters": [
          {
            "name": "nombre",
            "required": true,
            "in": "query",
            "description": "Nombre del producto a buscar (mínimo 2 caracteres)",
            "schema": {
              "minLength": 2,
              "example": "anillo",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "summary": "Buscar productos por nombre (público)",
        "tags": [
          "Productos"
        ]
      }
    },
    "/api/productos/filtrar": {
      "get": {
        "operationId": "ProductosController_filtrarProductos",
        "parameters": [
          {
            "name": "materialIds",
            "required": false,
            "in": "query",
            "description": "IDs de materiales (puedes pasar múltiples separados por coma: 1,2,3)",
            "schema": {
              "example": "1,2,3",
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          },
          {
            "name": "gemaIds",
            "required": false,
            "in": "query",
            "description": "IDs de gemas (separados por coma)",
            "schema": {
              "example": "4,6",
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          },
          {
            "name": "estiloIds",
            "required": false,
            "in": "query",
            "description": "IDs de estilos (separados por coma)",
            "schema": {
              "example": "2,3",
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          },
          {
            "name": "ocasionIds",
            "required": false,
            "in": "query",
            "description": "IDs de ocasión (separados por coma)",
            "schema": {
              "example": "1,5",
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          },
          {
            "name": "precioMin",
            "required": false,
            "in": "query",
            "description": "Precio mínimo (como string numérico)",
            "schema": {
              "example": "20.00",
              "type": "string"
            }
          },
          {
            "name": "precioMax",
            "required": false,
            "in": "query",
            "description": "Precio máximo (como string numérico)",
            "schema": {
              "example": "100.00",
              "type": "string"
            }
          },
          {
            "name": "orden",
            "required": false,
            "in": "query",
            "description": "Orden para los resultados",
            "schema": {
              "example": "precio_asc",
              "type": "string",
              "enum": [
                "precio_asc",
                "precio_desc",
                "fecha_asc",
                "fecha_desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "summary": "Filtrar productos (backend)",
        "tags": [
          "Productos"
        ]
      }
    },
    "/api/productos/categoria/{categoriaId}": {
      "get": {
        "operationId": "ProductosController_findByCategoryPublic",
        "parameters": [
          {
            "name": "categoriaId",
            "required": true,
            "in": "path",
            "description": "ID de la categoría (debe ser un número entero mayor a 0)",
            "schema": {
              "minimum": 1,
              "example": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "summary": "Obtener productos por categoría (público)",
        "tags": [
          "Productos"
        ]
      }
    },
    "/api/productos/mis-productos": {
      "get": {
        "operationId": "ProductosController_findByTienda",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obtener productos de la tienda del VENDEDOR o TRABAJADOR",
        "tags": [
          "Productos"
        ]
      }
    },
    "/api/productos/buscar/mis-productos": {
      "get": {
        "operationId": "ProductosController_buscarPorNombrePrivado",
        "parameters": [
          {
            "name": "nombre",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Buscar productos por nombre (solo productos de su tienda)",
        "tags": [
          "Productos"
        ]
      }
    },
    "/api/productos/categoria/mis-productos/{categoriaId}": {
      "get": {
        "operationId": "ProductosController_findByCategoryPrivate",
        "parameters": [
          {
            "name": "categoriaId",
            "required": true,
            "in": "path",
            "description": "ID de la categoría (debe ser un número entero mayor a 0)",
            "schema": {
              "minimum": 1,
              "example": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obtener productos por categoría (vendedor/trabajador)",
        "tags": [
          "Productos"
        ]
      }
    },
    "/api/productos/{id}/habilitar": {
      "patch": {
        "operationId": "ProductosController_habilitar",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Un VENDEDOR o TRABAJADOR habilitan un producto de su tienda",
        "tags": [
          "Productos"
        ]
      }
    },
    "/api/productos/{id}": {
      "patch": {
        "operationId": "ProductosController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CrearProductoDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Un VENDEDOR o TRABAJADOR actualizan un producto",
        "tags": [
          "Productos"
        ]
      },
      "delete": {
        "operationId": "ProductosController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Deshabilita (soft delete) un producto de la tienda",
        "tags": [
          "Productos"
        ]
      },
      "get": {
        "operationId": "ProductosController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "Obtener producto por ID (público)",
        "tags": [
          "Productos"
        ]
      }
    },
    "/api/cloudinary/generate-signature": {
      "get": {
        "operationId": "CloudinaryController_generateSignature",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Generar firma para subida segura a Cloudinary",
        "tags": [
          "Cloudinary"
        ]
      }
    },
    "/api/cloudinary/upload": {
      "post": {
        "operationId": "CloudinaryController_uploadImage",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Subir imágenes a Cloudinary desde backend",
        "tags": [
          "Cloudinary"
        ]
      }
    },
    "/api/favoritos": {
      "post": {
        "operationId": "FavoritosController_addFavorito",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFavoritoDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Favoritos"
        ]
      },
      "get": {
        "operationId": "FavoritosController_getMisFavoritos",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Favoritos"
        ]
      }
    },
    "/api/favoritos/{productoId}": {
      "delete": {
        "operationId": "FavoritosController_removeFavorito",
        "parameters": [
          {
            "name": "productoId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Favoritos"
        ]
      }
    },
    "/api/comparacion": {
      "post": {
        "operationId": "ComparacionController_addComparacion",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateComparacionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Comparación de productos"
        ]
      },
      "get": {
        "operationId": "ComparacionController_getComparacion",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Comparación de productos"
        ]
      }
    },
    "/api/comparacion/{productoId}": {
      "delete": {
        "operationId": "ComparacionController_removeComparacion",
        "parameters": [
          {
            "name": "productoId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Comparación de productos"
        ]
      }
    },
    "/api/admin/crear-admin": {
      "post": {
        "operationId": "AdminController_createAdmin",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CrearAdminDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Un admin crea un nuevo admin",
        "tags": [
          "Admin"
        ]
      }
    },
    "/api/admin/usuarios": {
      "get": {
        "operationId": "AdminController_findAllUsers",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "un admin obtiene todos los usuarios",
        "tags": [
          "Admin"
        ]
      }
    },
    "/api/admin/usuarios/{id}/rol": {
      "patch": {
        "operationId": "AdminController_changeUserRole",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CambiarRol"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Un admin cambia el rol de cualquier usuario",
        "tags": [
          "Admin"
        ]
      }
    },
    "/api/admin/tiendas": {
      "get": {
        "operationId": "AdminController_getAllTiendas",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Un admin ve todas tiendas",
        "tags": [
          "Admin"
        ]
      }
    },
    "/api/gemas": {
      "post": {
        "operationId": "GemaController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CrearGenericoDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Un admin crea una gema",
        "tags": [
          "Gemas"
        ]
      },
      "get": {
        "operationId": "GemaController_findAll",
        "parameters": [
          {
            "name": "nombre",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Listar todos las gemas con filtro opcional por nombre",
        "tags": [
          "Gemas"
        ]
      }
    },
    "/api/gemas/{id}": {
      "get": {
        "operationId": "GemaController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obtener una gema por ID",
        "tags": [
          "Gemas"
        ]
      },
      "patch": {
        "operationId": "GemaController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActualizarGenericoDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Actualizar una gema por ID",
        "tags": [
          "Gemas"
        ]
      },
      "delete": {
        "operationId": "GemaController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Eliminar una gema por ID",
        "tags": [
          "Gemas"
        ]
      }
    },
    "/api/materiales": {
      "post": {
        "operationId": "MaterialController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CrearGenericoDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Un admin crea un material",
        "tags": [
          "Materiales"
        ]
      },
      "get": {
        "operationId": "MaterialController_findAll",
        "parameters": [
          {
            "name": "nombre",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Listar todos los materiales con filtro opcional por nombre",
        "tags": [
          "Materiales"
        ]
      }
    },
    "/api/materiales/{id}": {
      "get": {
        "operationId": "MaterialController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obtener un material por ID",
        "tags": [
          "Materiales"
        ]
      },
      "patch": {
        "operationId": "MaterialController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActualizarGenericoDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Actualizar un material por ID",
        "tags": [
          "Materiales"
        ]
      },
      "delete": {
        "operationId": "MaterialController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Eliminar un material por ID",
        "tags": [
          "Materiales"
        ]
      }
    },
    "/api/ocasiones": {
      "post": {
        "operationId": "OcasionController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CrearGenericoDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Un admin crea una ocasión",
        "tags": [
          "Ocasiones"
        ]
      },
      "get": {
        "operationId": "OcasionController_findAll",
        "parameters": [
          {
            "name": "nombre",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Listar todo ocasion con filtro opcional por nombre",
        "tags": [
          "Ocasiones"
        ]
      }
    },
    "/api/ocasiones/{id}": {
      "get": {
        "operationId": "OcasionController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obtener una ocasión por ID",
        "tags": [
          "Ocasiones"
        ]
      },
      "patch": {
        "operationId": "OcasionController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActualizarGenericoDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Actualizar una ocasión por ID",
        "tags": [
          "Ocasiones"
        ]
      },
      "delete": {
        "operationId": "OcasionController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Eliminar una ocasión por ID",
        "tags": [
          "Ocasiones"
        ]
      }
    },
    "/api/estilos": {
      "post": {
        "operationId": "EstiloController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CrearGenericoDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Un admin crea un estilo",
        "tags": [
          "Estilos"
        ]
      },
      "get": {
        "operationId": "EstiloController_findAll",
        "parameters": [
          {
            "name": "nombre",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Listar todos los estilos con filtro opcional por nombre, se puede consultar asi tambien para todas las caracteristicas /estilos?nombre=mo",
        "tags": [
          "Estilos"
        ]
      }
    },
    "/api/estilos/{id}": {
      "get": {
        "operationId": "EstiloController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obtener un estilo por ID",
        "tags": [
          "Estilos"
        ]
      },
      "patch": {
        "operationId": "EstiloController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActualizarGenericoDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Actualizar un estilo por ID",
        "tags": [
          "Estilos"
        ]
      },
      "delete": {
        "operationId": "EstiloController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Eliminar un estilo por ID",
        "tags": [
          "Estilos"
        ]
      }
    },
    "/api/categoria": {
      "get": {
        "operationId": "CategoriaController_getAllPublic",
        "parameters": [
          {
            "name": "nombre",
            "required": false,
            "in": "query",
            "description": "Filtrar las categorías por nombre (opcional)",
            "schema": {
              "example": "anillos",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Listar todas las categorías con filtro opcional por nombre",
        "tags": [
          "Categoria"
        ]
      },
      "post": {
        "operationId": "CategoriaController_createCategory",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CrearCategoriaDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Un admin crea una categoria",
        "tags": [
          "Categoria"
        ]
      }
    },
    "/api/categoria/{id}": {
      "get": {
        "operationId": "CategoriaController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obtener una Categoria por ID",
        "tags": [
          "Categoria"
        ]
      },
      "patch": {
        "operationId": "CategoriaController_updateCategory",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActualizarCategoriaDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Un admin actualiza una categoria",
        "tags": [
          "Categoria"
        ]
      },
      "delete": {
        "operationId": "CategoriaController_deleteCategory",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Un admin elimina una categoria",
        "tags": [
          "Categoria"
        ]
      }
    },
    "/api/cotizaciones/{id}/estado": {
      "patch": {
        "operationId": "CotizacionController_cambiarEstadoCotizacion",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CambiarEstadoCotizacionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Un admin aprueba o deniega una cotización",
        "tags": [
          "Cotizaciones"
        ]
      }
    },
    "/api/cotizaciones": {
      "get": {
        "operationId": "CotizacionController_getAllSolicitudesCotizacion",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Un admin ve todas las solicitudes de cotización",
        "tags": [
          "Cotizaciones"
        ]
      },
      "post": {
        "operationId": "CotizacionController_crearCotizacion",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CrearCotizacionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Crear solicitud de cotización (público o usuario autenticado(toma datos del token si no llena por completo el formulario))",
        "tags": [
          "Cotizaciones"
        ]
      }
    },
    "/api/cotizaciones/aprobadas": {
      "get": {
        "operationId": "CotizacionController_getSolicitudesAprobadas",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Vendedores y trabajadores ven solicitudes aprobadas",
        "tags": [
          "Cotizaciones"
        ]
      }
    },
    "/api/cotizaciones/mias": {
      "get": {
        "operationId": "CotizacionController_getMisSolicitudes",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Cliente autenticado ve sus propias solicitudes",
        "tags": [
          "Cotizaciones"
        ]
      }
    },
    "/api/cotizaciones/{id}": {
      "delete": {
        "operationId": "CotizacionController_eliminarSolicitud",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Cliente autenticado elimina su propia solicitud",
        "tags": [
          "Cotizaciones"
        ]
      }
    },
    "/api/tiendas": {
      "get": {
        "operationId": "TiendaController_getAllPublicas",
        "parameters": [
          {
            "name": "nombre",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Listar todos los estilos con filtro opcional por nombre, se puede consultar asi tambien para todas las caracteristicas /tiendas?nombre=mo",
        "tags": [
          "Tienda"
        ]
      }
    },
    "/api/tiendas/{id}": {
      "get": {
        "operationId": "TiendaController_getUnaPublica",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Un usuario público puede ver toda la información de una tienda",
        "tags": [
          "Tienda"
        ]
      }
    },
    "/api/tiendas/mi-tienda": {
      "patch": {
        "operationId": "TiendaController_actualizarTienda",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActualizarTiendaDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Vendedor actualiza su tienda",
        "tags": [
          "Tienda"
        ]
      }
    },
    "/api/carrito": {
      "post": {
        "operationId": "CarritoController_agregarProducto",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgregarCarritoDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Agregar un producto al carrito o aumentar su cantidad",
        "tags": [
          "Carrito"
        ]
      },
      "get": {
        "operationId": "CarritoController_obtenerCarrito",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obtener todos los productos del carrito del usuario",
        "tags": [
          "Carrito"
        ]
      },
      "delete": {
        "operationId": "CarritoController_vaciarCarrito",
        "parameters": [],
        "responses": {
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Vaciar todo el carrito del usuario",
        "tags": [
          "Carrito"
        ]
      }
    },
    "/api/carrito/{productoId}/quitar-uno": {
      "patch": {
        "operationId": "CarritoController_quitarUnaUnidad",
        "parameters": [
          {
            "name": "productoId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Disminuir en una unidad la cantidad de un producto en el carrito",
        "tags": [
          "Carrito"
        ]
      }
    },
    "/api/carrito/{productoId}": {
      "delete": {
        "operationId": "CarritoController_eliminarProducto",
        "parameters": [
          {
            "name": "productoId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Eliminar completamente un producto del carrito",
        "tags": [
          "Carrito"
        ]
      }
    },
    "/api/certificados-joyas": {
      "post": {
        "operationId": "CertificadoJoyaController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CrearCertificadoJoyaDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Certificados de joyas"
        ]
      },
      "get": {
        "operationId": "CertificadoJoyaController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Certificados de joyas"
        ]
      }
    },
    "/api/certificados-joyas/{id}": {
      "get": {
        "operationId": "CertificadoJoyaController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Certificados de joyas"
        ]
      },
      "patch": {
        "operationId": "CertificadoJoyaController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActualizarCertificadoJoyaDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Certificados de joyas"
        ]
      },
      "delete": {
        "operationId": "CertificadoJoyaController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Certificados de joyas"
        ]
      }
    },
    "/api/calificaciones": {
      "post": {
        "operationId": "CalificacionesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrarCalificacion"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Un CLIENTE califica un producto",
        "tags": [
          "Calificaciones"
        ]
      },
      "get": {
        "description": "Permite a un CLIENTE visualizar todas sus calificaciones realizadas. Cada calificación incluye información del producto asociado. Puede paginarse usando parámetros page y limit en el servicio.",
        "operationId": "CalificacionesController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obtener todas las calificaciones de un CLIENTE",
        "tags": [
          "Calificaciones"
        ]
      }
    },
    "/api/calificaciones/{id}": {
      "get": {
        "operationId": "CalificacionesController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Un CLIENTE visualizara una calificacion por id",
        "tags": [
          "Calificaciones"
        ]
      },
      "patch": {
        "operationId": "CalificacionesController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActualizarCalificacion"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Un CLIENTE podra actuzalizar sus calificaciones",
        "tags": [
          "Calificaciones"
        ]
      },
      "delete": {
        "operationId": "CalificacionesController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Un CLIENTE podra elimar una calificacion por su id de la calificacion",
        "tags": [
          "Calificaciones"
        ]
      }
    },
    "/api/calificaciones/{id}/estado": {
      "patch": {
        "operationId": "CalificacionesController_updateEstado",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActualizarEstadoDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Un ADMIN puede cambiar el estado de una calificacion por defaul esta en PENDIENTE, cambios a APROBADO o RECHAZADO",
        "tags": [
          "Calificaciones"
        ]
      }
    },
    "/api/direcciones": {
      "post": {
        "operationId": "DireccionesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CrearDireccion"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Añadir una nueva dirección adicional",
        "tags": [
          "Direcciones"
        ]
      },
      "get": {
        "operationId": "DireccionesController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obtener todas las direcciones del usuario autenticado",
        "tags": [
          "Direcciones"
        ]
      }
    },
    "/api/direcciones/{id}": {
      "get": {
        "operationId": "DireccionesController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obtener una dirección por id (solo del usuario autenticado)",
        "tags": [
          "Direcciones"
        ]
      },
      "patch": {
        "operationId": "DireccionesController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDireccion"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Actualizar una dirección por id (solo del usuario autenticado)",
        "tags": [
          "Direcciones"
        ]
      },
      "delete": {
        "operationId": "DireccionesController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Eliminar una dirección por id (solo del usuario autenticado)",
        "tags": [
          "Direcciones"
        ]
      }
    },
    "/api/pedidos/confirmar": {
      "post": {
        "operationId": "PedidoController_confirmarCompra",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Confirmar compra con todos los productos del carrito",
        "tags": [
          "Pedidos"
        ]
      }
    },
    "/api/pedidos": {
      "get": {
        "operationId": "PedidoController_obtenerPedidos",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obtener los pedidos del usuario autenticado",
        "tags": [
          "Pedidos"
        ]
      }
    },
    "/api/pedidos/tienda": {
      "get": {
        "operationId": "PedidoController_obtenerPedidosTienda",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obtener todos los pedidos de la tienda (solo vendedor/trabajador)",
        "tags": [
          "Pedidos"
        ]
      }
    },
    "/api/pedidos/confirmar/{tiendaId}": {
      "post": {
        "operationId": "PedidoController_confirmarCompraPorTienda",
        "parameters": [
          {
            "name": "tiendaId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Confirmar productos del carrito por tienda",
        "tags": [
          "Pedidos"
        ]
      }
    },
    "/api/pedidos/{id}": {
      "get": {
        "operationId": "PedidoController_obtenerDetallePedido",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obtener detalle de un pedido específico del usuario",
        "tags": [
          "Pedidos"
        ]
      },
      "patch": {
        "operationId": "PedidoController_actualizarPedidoCompleto",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActualizarPedidoDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Actualizar datos completos del pedido (formaPago, moneda, productos, etc)",
        "tags": [
          "Pedidos"
        ]
      }
    },
    "/api/pedidos/{id}/estado": {
      "patch": {
        "operationId": "PedidoController_actualizarEstado",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActualizarEstadoPDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Actualizar estado del pedido. Si se cambia a BORRADO, se elimina el pedido y sus productos.",
        "tags": [
          "Pedidos"
        ]
      }
    },
    "/api/cupon/create": {
      "post": {
        "operationId": "CuponController_crear",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CuponDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Crear un nuevo cupón por VENDEDOR",
        "tags": [
          "Cupon"
        ]
      }
    },
    "/api/cupon": {
      "get": {
        "operationId": "CuponController_obtenerTodos",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obtener todos los cupones por VENDEDOR",
        "tags": [
          "Cupon"
        ]
      }
    },
    "/api/cupon/{id}": {
      "get": {
        "operationId": "CuponController_obtenerPorId",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obtener un cupón por ID por VENDEDOR",
        "tags": [
          "Cupon"
        ]
      }
    },
    "/api/cupon/actualizar/{id}": {
      "patch": {
        "operationId": "CuponController_actualizar",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CuponDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Actualizar un cupón por ID por VENDEDOR",
        "tags": [
          "Cupon"
        ]
      }
    },
    "/api/cupon/validar/{codigo}": {
      "post": {
        "operationId": "CuponController_validar",
        "parameters": [
          {
            "name": "codigo",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Validar un cupón por código por VENDEDOR",
        "tags": [
          "Cupon"
        ]
      }
    },
    "/api/cupon/usar/{codigo}": {
      "patch": {
        "operationId": "CuponController_usar",
        "parameters": [
          {
            "name": "codigo",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Marcar un cupón como usado por código por VENDEDOR",
        "tags": [
          "Cupon"
        ]
      }
    },
    "/api/cupon/eliminar/{id}": {
      "delete": {
        "operationId": "CuponController_eliminar",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Eliminar un cupón por ID por VENDEDOR",
        "tags": [
          "Cupon"
        ]
      }
    },
    "/api/recuperacion-password/generar-token": {
      "post": {
        "description": "Genera un token para restablecer la contraseña del usuario y lo muestra en consola (simula envío de correo).",
        "operationId": "RecuperacionPasswordController_generarToken",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerarTokenDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Generar token de recuperación",
        "tags": [
          "RecuperacionPassword"
        ]
      }
    },
    "/api/recuperacion-password/validar-token": {
      "post": {
        "description": "Valida que el token enviado por el usuario sea válido y no esté expirado o usado.",
        "operationId": "RecuperacionPasswordController_validarToken",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidarTokenDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Validar token de recuperación",
        "tags": [
          "RecuperacionPassword"
        ]
      }
    },
    "/api/recuperacion-password/cambiar-contrasena": {
      "post": {
        "description": "Cambia la contraseña del usuario usando el token de recuperación y marca el token como usado.",
        "operationId": "RecuperacionPasswordController_cambiarContrasena",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CambiarContrasenaDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Cambiar contraseña",
        "tags": [
          "RecuperacionPassword"
        ]
      }
    },
    "/api/oferta-global/create": {
      "post": {
        "description": "Permite a un ADMIN crear una oferta global y asociarla a productos.",
        "operationId": "OfertaGlobalController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OfertaGlobalDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Crear una nueva oferta global por ADMIN",
        "tags": [
          "OfertaGlobal"
        ]
      }
    },
    "/api/oferta-global/listar": {
      "get": {
        "description": "Obtiene todas las ofertas globales junto con los productos asociados.",
        "operationId": "OfertaGlobalController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Listar todas las ofertas globales por ADMIN",
        "tags": [
          "OfertaGlobal"
        ]
      }
    },
    "/api/oferta-global/listar/{id}": {
      "get": {
        "description": "Permite obtener los detalles de una oferta global específica por su ID.",
        "operationId": "OfertaGlobalController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obtener una oferta global por ID por ADMIN",
        "tags": [
          "OfertaGlobal"
        ]
      }
    },
    "/api/oferta-global/update/{id}": {
      "patch": {
        "description": "Permite actualizar los datos de una oferta global, incluyendo los productos asociados.",
        "operationId": "OfertaGlobalController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OfertaGlobalDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Actualizar una oferta global por ADMIN",
        "tags": [
          "OfertaGlobal"
        ]
      }
    },
    "/api/oferta-global/desactivar/{id}": {
      "patch": {
        "description": "Marca la oferta global como inactiva sin eliminarla físicamente.",
        "operationId": "OfertaGlobalController_desactivar",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Desactivar una oferta global por ADMIN",
        "tags": [
          "OfertaGlobal"
        ]
      }
    },
    "/api/oferta-global/activar/{id}": {
      "patch": {
        "description": "Marca la oferta global como activa.",
        "operationId": "OfertaGlobalController_activar",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Activar una oferta global por ADMIN",
        "tags": [
          "OfertaGlobal"
        ]
      }
    },
    "/api/oferta-global/delete/{id}": {
      "delete": {
        "description": "Elimina físicamente la oferta global de la base de datos.",
        "operationId": "OfertaGlobalController_eliminar",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Eliminar una oferta global por ADMIN",
        "tags": [
          "OfertaGlobal"
        ]
      }
    },
    "/api/documento/generar/{pedidoId}": {
      "post": {
        "operationId": "DocumentoController_generarDocumento",
        "parameters": [
          {
            "name": "pedidoId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Generar boleta o factura desde pedido",
        "tags": [
          "Documento"
        ]
      }
    },
    "/api/documento/visualizar/{id}": {
      "get": {
        "operationId": "DocumentoController_getDocumento",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obtener documento por ID",
        "tags": [
          "Documento"
        ]
      }
    },
    "/api/seriesb": {
      "post": {
        "operationId": "SerieCorrelativoBController_crearSerie",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CrearSerieDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Crear nueva serie para una tienda",
        "tags": [
          "Series Correlativas BOLETA"
        ]
      },
      "get": {
        "operationId": "SerieCorrelativoBController_obtenerSeries",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obtener todas las series de la tienda del usuario",
        "tags": [
          "Series Correlativas BOLETA"
        ]
      }
    },
    "/api/seriesb/{id}": {
      "get": {
        "operationId": "SerieCorrelativoBController_obtenerPorId",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obtener una serie por ID",
        "tags": [
          "Series Correlativas BOLETA"
        ]
      },
      "patch": {
        "operationId": "SerieCorrelativoBController_actualizarSerie",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditarSerieDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Actualizar una serie por ID",
        "tags": [
          "Series Correlativas BOLETA"
        ]
      },
      "delete": {
        "operationId": "SerieCorrelativoBController_eliminarSerie",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Eliminar una serie por ID",
        "tags": [
          "Series Correlativas BOLETA"
        ]
      }
    }
  },
  "info": {
    "title": "MarketJoyas",
    "description": "Documentación de endpoints de marketjoyas",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "CrearClienteDto": {
        "type": "object",
        "properties": {
          "nombre_completo": {
            "type": "string",
            "description": "Nombre completo del cliente",
            "example": "María García López"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email del cliente",
            "example": "maria.garcia@email.com"
          },
          "direccion": {
            "type": "string",
            "description": "Dirección del cliente (opcional)",
            "example": "Av. Principal 123, Lima, Perú (opcional)"
          },
          "dni": {
            "type": "string",
            "minLength": 8,
            "maxLength": 8,
            "description": "DNI del cliente (8 caracteres)",
            "example": "71234567"
          },
          "telefono": {
            "type": "string",
            "description": "Número de teléfono del cliente",
            "example": "+51987654321"
          },
          "contraseña": {
            "type": "string",
            "description": "Contraseña del cliente",
            "example": "ClaveSegura123",
            "minLength": 6
          }
        },
        "required": [
          "nombre_completo",
          "email",
          "dni",
          "telefono",
          "contraseña"
        ]
      },
      "TiendaDto": {
        "type": "object",
        "properties": {
          "nombre_tienda": {
            "type": "string",
            "description": "Nombre de la tienda",
            "example": "Tienda Central"
          },
          "direccion_tienda": {
            "type": "string",
            "description": "Dirección de la tienda",
            "example": "Av. Comercio 456"
          },
          "telefono_tienda": {
            "type": "string",
            "description": "Teléfono de la tienda",
            "example": "+5112345678"
          },
          "pais": {
            "type": "string",
            "description": "País donde se encuentra la tienda",
            "example": "Perú"
          },
          "ciudad": {
            "type": "string",
            "description": "Ciudad donde se encuentra la tienda",
            "example": "Lima"
          },
          "provincia": {
            "type": "string",
            "description": "Provincia donde se encuentra la tienda",
            "example": "Lima"
          },
          "codigoPostal": {
            "type": "string",
            "description": "Código postal de la tienda",
            "example": "15001"
          }
        },
        "required": [
          "nombre_tienda"
        ]
      },
      "CrearVendedorDto": {
        "type": "object",
        "properties": {
          "nombre_completo": {
            "type": "string",
            "description": "Nombre completo del vendedor",
            "example": "Juan Pérez Gómez"
          },
          "username": {
            "type": "string",
            "description": "Nombre de usuario para el vendedor",
            "example": "juanperez123"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email del vendedor",
            "example": "juan.perez@email.com"
          },
          "direccion": {
            "type": "string",
            "description": "Dirección del vendedor",
            "example": "Calle Falsa 123, Ciudad"
          },
          "dni": {
            "type": "string",
            "minLength": 8,
            "maxLength": 8,
            "description": "DNI del vendedor (8 caracteres)",
            "example": "12345678"
          },
          "telefono": {
            "type": "string",
            "description": "Número de teléfono del vendedor",
            "example": "+51987654321"
          },
          "contraseña": {
            "type": "string",
            "description": "Contraseña del vendedor",
            "example": "admin123",
            "minLength": 6
          },
          "tienda": {
            "description": "Datos de la tienda asociada",
            "allOf": [
              {
                "$ref": "#/components/schemas/TiendaDto"
              }
            ]
          }
        },
        "required": [
          "email",
          "contraseña"
        ]
      },
      "CrearDemoVendedorDto": {
        "type": "object",
        "properties": {
          "nombre_completo": {
            "type": "string",
            "description": "Nombre completo del usuario",
            "example": "Juan Pérez García"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Correo electrónico del usuario",
            "example": "juanperez@email.com"
          },
          "telefono": {
            "type": "string",
            "description": "Número de teléfono",
            "example": "+51987654321"
          },
          "dni": {
            "type": "string",
            "pattern": "/^(\\d{8}|\\d{11})$/",
            "description": "DNI del usuario (8 dígitos) o RUC (11 dígitos)",
            "example": "12345678"
          },
          "direccion": {
            "type": "string",
            "description": "Dirección del usuario (opcional)",
            "example": "Av. Siempre Viva 742"
          },
          "nombre_tienda": {
            "type": "string",
            "description": "Nombre de la tienda",
            "example": "Repuestos El Rápido"
          },
          "direccion_tienda": {
            "type": "string",
            "description": "Dirección fiscal de la tienda (opcional)",
            "example": "Jr. Comercio 123, Cercado de Lima"
          },
          "departamento": {
            "type": "string",
            "description": "Departamento donde se ubica la tienda (opcional)",
            "example": "Lima"
          },
          "provincia": {
            "type": "string",
            "description": "Provincia donde se ubica la tienda (opcional)",
            "example": "Lima"
          },
          "distrito": {
            "type": "string",
            "description": "Distrito donde se ubica la tienda (opcional)",
            "example": "San Isidro"
          },
          "contraseña": {
            "type": "string",
            "minLength": 6,
            "description": "Contraseña del usuario (mínimo 6 caracteres)",
            "example": "miSuperClave123"
          }
        },
        "required": [
          "nombre_completo",
          "email",
          "telefono",
          "nombre_tienda",
          "contraseña"
        ]
      },
      "CrearTrabajadorDto": {
        "type": "object",
        "properties": {
          "nombre_completo": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "contraseña": {
            "type": "string",
            "minLength": 6
          },
          "telefono": {
            "type": "string"
          },
          "dni": {
            "type": "string"
          }
        },
        "required": [
          "nombre_completo",
          "email",
          "contraseña",
          "telefono",
          "dni"
        ]
      },
      "ActualizarInfoDto": {
        "type": "object",
        "properties": {
          "nombre_completo": {
            "type": "string",
            "example": "Juan Pérez"
          },
          "dni": {
            "type": "string",
            "minLength": 8,
            "maxLength": 8,
            "example": "12345678"
          },
          "telefono": {
            "type": "string",
            "example": "+51987654321"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "juan@email.com"
          },
          "contraseña_actual": {
            "type": "string",
            "example": "MiClaveActual123"
          },
          "nueva_contraseña": {
            "type": "string",
            "example": "MiNuevaClave456"
          }
        }
      },
      "ActualizarDireccionDto": {
        "type": "object",
        "properties": {
          "direccion": {
            "type": "string",
            "example": "Av. Siempre Viva 742"
          }
        }
      },
      "ActualizarFotoDto": {
        "type": "object",
        "properties": {
          "fotoPerfilUrl": {
            "type": "string",
            "example": "https://res.cloudinary.com/miimagen.jpg"
          },
          "fotoPerfilPublicId": {
            "type": "string",
            "example": "cloudinary-public-id-123 o lo que devuelva"
          }
        },
        "required": [
          "fotoPerfilUrl",
          "fotoPerfilPublicId"
        ]
      },
      "CrearPrimerAdminDto": {
        "type": "object",
        "properties": {
          "nombre_completo": {
            "type": "string",
            "description": "Nombre completo del administrador",
            "example": "Juan Pérez Torres"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email del administrador",
            "example": "juan.perez@admin.com"
          },
          "direccion": {
            "type": "string",
            "description": "Dirección del administrador (opcional)",
            "example": "Calle 45 #123, Bogotá, Colombia"
          },
          "dni": {
            "type": "string",
            "minLength": 8,
            "maxLength": 8,
            "description": "DNI del administrador (8 caracteres)",
            "example": "87654321"
          },
          "telefono": {
            "type": "string",
            "description": "Número de teléfono del administrador",
            "example": "+573001112233"
          },
          "contraseña": {
            "type": "string",
            "description": "Contraseña del administrador (mínimo 6 caracteres)",
            "example": "admin123",
            "minLength": 6
          }
        },
        "required": [
          "nombre_completo",
          "email",
          "dni",
          "telefono",
          "contraseña"
        ]
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "usuario@gmail.com",
            "description": "Correo electrónico del usuario"
          },
          "password": {
            "type": "string",
            "minLength": 6,
            "example": "admin123",
            "description": "Contraseña del usuario (mínimo 6 caracteres)"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "CrearProductoDto": {
        "type": "object",
        "properties": {
          "nombre": {
            "type": "string",
            "example": "Collar de plata",
            "description": "Nombre del producto"
          },
          "descripcion": {
            "type": "string",
            "example": "Un hermoso collar con incrustaciones",
            "description": "Descripción del producto OPCIONAL"
          },
          "precio": {
            "type": "number",
            "example": 59.99,
            "description": "Precio del producto"
          },
          "enStock": {
            "type": "number",
            "minimum": 0,
            "example": 10,
            "description": "Cantidad disponible en stock"
          },
          "imagen": {
            "type": "string",
            "example": "https://miapp.com/images/producto.jpg",
            "description": "Imagen principal del producto"
          },
          "categoriaId": {
            "type": "number",
            "minimum": 1,
            "example": 2,
            "description": "ID de la categoría OPCIONAL"
          },
          "imagenes": {
            "example": [
              "https://miapp.com/images/producto1.jpg",
              "https://miapp.com/images/producto2.jpg"
            ],
            "description": "Arreglo de URLs de imágenes adicionales",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "materialId": {
            "type": "number",
            "example": 3,
            "description": "ID del material OPCIONAL"
          },
          "ocasionId": {
            "type": "number",
            "example": 1,
            "description": "ID de la ocasión OPCIONAL"
          },
          "gemaId": {
            "type": "number",
            "example": 4,
            "description": "ID de la gema OPCIONAL"
          },
          "estiloId": {
            "type": "number",
            "example": 2,
            "description": "ID del estilo OPCIONAL"
          },
          "genero": {
            "type": "string",
            "example": "Femenino",
            "description": "Género del producto (opcional)"
          },
          "condicion": {
            "type": "string",
            "example": "Nuevo",
            "description": "Condición general del producto (nuevo, usado, etc)"
          },
          "detalleCondicion": {
            "type": "string",
            "example": "Caja ligeramente dañada",
            "description": "Detalle específico de la condición del producto"
          },
          "paisOrigen": {
            "type": "string",
            "example": "Italia",
            "description": "País de origen del producto"
          },
          "modelo": {
            "type": "string",
            "example": "Modelo X23",
            "description": "Modelo del producto"
          },
          "poseeNiquel": {
            "type": "boolean",
            "example": true,
            "description": "Indica si el producto contiene níquel (true/false)"
          },
          "garantia": {
            "type": "string",
            "example": "2 años de garantía",
            "description": "Descripción de la garantía del producto"
          },
          "peso": {
            "type": "number",
            "example": 0.25,
            "description": "Peso del producto en kilogramos"
          },
          "talla": {
            "type": "string",
            "example": "M",
            "description": "Talla del producto (S, M, L, etc)"
          },
          "color": {
            "type": "string",
            "example": "Plateado",
            "description": "Color del producto"
          }
        },
        "required": [
          "nombre",
          "precio"
        ]
      },
      "CreateFavoritoDto": {
        "type": "object",
        "properties": {
          "productoId": {
            "type": "number",
            "description": "ID del producto a agregar a favoritos",
            "example": 12
          }
        },
        "required": [
          "productoId"
        ]
      },
      "CreateComparacionDto": {
        "type": "object",
        "properties": {
          "productoId": {
            "type": "number",
            "description": "ID del producto a agregar a comparación",
            "example": 8
          }
        },
        "required": [
          "productoId"
        ]
      },
      "CrearAdminDto": {
        "type": "object",
        "properties": {
          "nombre_completo": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "dni": {
            "type": "string"
          },
          "telefono": {
            "type": "string"
          },
          "contraseña": {
            "type": "string",
            "minLength": 6
          }
        },
        "required": [
          "nombre_completo",
          "email",
          "dni",
          "telefono",
          "contraseña"
        ]
      },
      "CambiarRol": {
        "type": "object",
        "properties": {
          "rol": {
            "type": "object"
          }
        },
        "required": [
          "rol"
        ]
      },
      "CrearGenericoDto": {
        "type": "object",
        "properties": {
          "nombre": {
            "type": "string",
            "description": "Nombre de la entidad (unico)",
            "example": "x"
          }
        },
        "required": [
          "nombre"
        ]
      },
      "ActualizarGenericoDto": {
        "type": "object",
        "properties": {
          "nombre": {
            "type": "string",
            "description": "Nombre de la entidad (unico)",
            "example": "Moderno"
          }
        }
      },
      "CrearCategoriaDto": {
        "type": "object",
        "properties": {
          "nombre": {
            "type": "string",
            "description": "Nombre de la entidad (único)",
            "example": "x"
          }
        },
        "required": [
          "nombre"
        ]
      },
      "ActualizarCategoriaDto": {
        "type": "object",
        "properties": {
          "nombre": {
            "type": "string",
            "description": "Nombre de la entidad (único)",
            "example": "x"
          }
        },
        "required": [
          "nombre"
        ]
      },
      "CambiarEstadoCotizacionDto": {
        "type": "object",
        "properties": {
          "estado": {
            "type": "string",
            "description": "Estado de la cotización, debe ser APROBADA o DENEGADA",
            "enum": [
              "PENDIENTE",
              "APROBADA",
              "DENEGADA"
            ],
            "example": "APROBADA"
          }
        },
        "required": [
          "estado"
        ]
      },
      "CrearCotizacionDto": {
        "type": "object",
        "properties": {
          "imagenUrl": {
            "type": "string",
            "format": "uri",
            "description": "URL de la imagen para la cotización",
            "example": "https://example.com/imagen.jpg"
          },
          "descripcion": {
            "type": "string",
            "description": "Descripción u observaciones para la cotización",
            "example": "Necesito un presupuesto para 100 unidades"
          },
          "contactoEmail": {
            "type": "string",
            "format": "email",
            "description": "Email de contacto (opcional, para usuarios no autenticados)",
            "example": " Si no esta autenticado: contacto@correo.com"
          },
          "contactoTelefono": {
            "type": "string",
            "nullable": true,
            "pattern": "/^[0-9+\\-\\s]{7,15}$/",
            "description": "Teléfono de contacto (opcional, para usuarios no autenticados)",
            "example": "Si no esta autenticado: +51987654321"
          },
          "contactoNombre": {
            "type": "string",
            "description": "Nombre completo de contacto (opcional, para usuarios no autenticados)",
            "example": "Si no esta autenticado: Juan Pérez"
          }
        },
        "required": [
          "imagenUrl",
          "descripcion"
        ]
      },
      "ActualizarTiendaDto": {
        "type": "object",
        "properties": {
          "nombre": {
            "type": "string",
            "description": "Nombre o razón social de la tienda",
            "example": "Mi Tienda S.A.C."
          },
          "direccion": {
            "type": "string",
            "description": "Dirección fiscal de la tienda",
            "example": "Av. Principal 123, Lima"
          },
          "telefono": {
            "type": "string",
            "description": "Teléfono de contacto de la tienda",
            "example": "+51987654321"
          },
          "pais": {
            "type": "string",
            "description": "País donde opera la tienda",
            "example": "Perú"
          },
          "ciudad": {
            "type": "string",
            "description": "Ciudad donde está ubicada la tienda",
            "example": "Lima"
          },
          "provincia": {
            "type": "string",
            "description": "Provincia de la tienda",
            "example": "Lima"
          },
          "departamento": {
            "type": "string",
            "description": "Departamento de la tienda",
            "example": "Lima"
          },
          "distrito": {
            "type": "string",
            "description": "Distrito de la tienda",
            "example": "San Isidro"
          },
          "codigoPostal": {
            "type": "string",
            "description": "Código postal",
            "example": "15036"
          },
          "ruc": {
            "type": "string",
            "description": "Número de RUC de la tienda",
            "example": "20481234567"
          },
          "emailTienda": {
            "type": "string",
            "format": "email",
            "description": "Correo electrónico de la tienda",
            "example": "contacto@mitienda.com"
          },
          "logo": {
            "type": "string",
            "description": "URL del logo de la tienda",
            "example": "https://res.cloudinary.com/tuapp/image/upload/v123456/logo.png"
          },
          "logoPublicId": {
            "type": "string",
            "description": "ID público del logo en Cloudinary",
            "example": "tienda/logo123"
          }
        }
      },
      "AgregarCarritoDto": {
        "type": "object",
        "properties": {
          "productoId": {
            "type": "number",
            "description": "ID del producto a agregar al carrito",
            "example": 5
          },
          "cantidad": {
            "type": "number",
            "minimum": 1,
            "description": "Cantidad del producto (mínimo 1)",
            "example": 2
          }
        },
        "required": [
          "productoId",
          "cantidad"
        ]
      },
      "CrearCertificadoJoyaDto": {
        "type": "object",
        "properties": {
          "tiendaNombre": {
            "type": "string",
            "example": "Joyería El Dorado"
          },
          "tiendaDireccion": {
            "type": "string",
            "example": "Av. Siempre Viva 123"
          },
          "clienteNombre": {
            "type": "string",
            "example": "Juan Pérez"
          },
          "clienteDnioRUC": {
            "type": "string",
            "pattern": "/^\\d{8,11}$/",
            "example": "12345678901",
            "description": "DNI (8 dígitos) o RUC (11 dígitos). Solo se permiten números.",
            "maxLength": 11,
            "minLength": 8
          },
          "productoNombre": {
            "type": "string",
            "description": "Nombre del producto joya",
            "example": "Anillo de compromiso oro 18k"
          },
          "gemaId": {
            "type": "number",
            "description": "ID de la gema principal",
            "example": 3
          },
          "materialId": {
            "type": "number",
            "description": "ID del material de la joya",
            "example": 2
          },
          "precio": {
            "type": "number",
            "description": "Precio de la joya",
            "example": 1500.99
          },
          "imagenUrl": {
            "type": "string",
            "description": "URL de la imagen de la joya (opcional)",
            "example": "https://misimagenes.com/anillo-oro.jpg (opcional)"
          },
          "pais": {
            "type": "string",
            "example": "Perú (opcional)"
          },
          "descripcion": {
            "type": "string",
            "example": "Un anillo fino de oro 18k (opcional)"
          }
        },
        "required": [
          "tiendaNombre",
          "tiendaDireccion",
          "clienteNombre",
          "clienteDnioRUC",
          "productoNombre",
          "gemaId",
          "materialId",
          "precio"
        ]
      },
      "ActualizarCertificadoJoyaDto": {
        "type": "object",
        "properties": {
          "tiendaNombre": {
            "type": "string",
            "example": "Joyería El Dorado"
          },
          "tiendaDireccion": {
            "type": "string",
            "example": "Av. Siempre Viva 123"
          },
          "clienteNombre": {
            "type": "string",
            "example": "Juan Pérez"
          },
          "clienteDnioRUC": {
            "type": "string",
            "pattern": "/^\\d{8,11}$/",
            "example": "12345678901",
            "description": "DNI (8 dígitos) o RUC (11 dígitos). Solo se permiten números.",
            "maxLength": 11,
            "minLength": 8
          },
          "productoNombre": {
            "type": "string",
            "description": "Nombre del producto joya",
            "example": "Anillo de compromiso oro 18k"
          },
          "gemaId": {
            "type": "number",
            "description": "ID de la gema principal",
            "example": 3
          },
          "materialId": {
            "type": "number",
            "description": "ID del material de la joya",
            "example": 2
          },
          "precio": {
            "type": "number",
            "description": "Precio de la joya",
            "example": 1500.99
          },
          "imagenUrl": {
            "type": "string",
            "description": "URL de la imagen de la joya (opcional)",
            "example": "https://misimagenes.com/anillo-oro.jpg (opcional)"
          },
          "pais": {
            "type": "string",
            "example": "Perú (opcional)"
          },
          "descripcion": {
            "type": "string",
            "example": "Un anillo fino de oro 18k (opcional)"
          }
        }
      },
      "RegistrarCalificacion": {
        "type": "object",
        "properties": {
          "productoId": {
            "type": "number",
            "minimum": 1,
            "example": 1,
            "description": "ID del producto relacionado"
          },
          "estrellas": {
            "type": "number",
            "minimum": 1,
            "maximum": 5,
            "example": 1,
            "description": "Calificacion de estrellas 1 - 5"
          },
          "comentario": {
            "type": "string",
            "example": "Muy buen producto",
            "description": "Comentario opcional del usuario"
          }
        }
      },
      "ActualizarCalificacion": {
        "type": "object",
        "properties": {
          "productoId": {
            "type": "number",
            "minimum": 1,
            "example": 1,
            "description": "ID del producto relacionado"
          },
          "estrellas": {
            "type": "number",
            "minimum": 1,
            "maximum": 5,
            "example": 1,
            "description": "Calificacion de estrellas 1 - 5"
          },
          "comentario": {
            "type": "string",
            "example": "Muy buen producto",
            "description": "Comentario opcional del usuario"
          }
        }
      },
      "ActualizarEstadoDto": {
        "type": "object",
        "properties": {
          "estado": {
            "type": "object"
          }
        },
        "required": [
          "estado"
        ]
      },
      "CrearDireccion": {
        "type": "object",
        "properties": {
          "direccion": {
            "type": "string",
            "example": "Av. Siempre Viva 742",
            "description": "Dirección completa"
          },
          "departamento": {
            "type": "string",
            "example": "Lima",
            "description": "Departamento"
          },
          "provincia": {
            "type": "string",
            "example": "Lima",
            "description": "Provincia"
          },
          "distrito": {
            "type": "string",
            "example": "Miraflores",
            "description": "Distrito"
          },
          "tipoDireccion": {
            "type": "string",
            "example": "Casa",
            "description": "Tipo de dirección (Casa, Oficina, Dpto, etc.)"
          }
        },
        "required": [
          "direccion",
          "departamento",
          "provincia",
          "distrito",
          "tipoDireccion"
        ]
      },
      "UpdateDireccion": {
        "type": "object",
        "properties": {
          "direccion": {
            "type": "string",
            "example": "Av. Siempre Viva 742",
            "description": "Dirección completa"
          },
          "departamento": {
            "type": "string",
            "example": "Lima",
            "description": "Departamento"
          },
          "provincia": {
            "type": "string",
            "example": "Lima",
            "description": "Provincia"
          },
          "distrito": {
            "type": "string",
            "example": "Miraflores",
            "description": "Distrito"
          },
          "tipoDireccion": {
            "type": "string",
            "example": "Casa",
            "description": "Tipo de dirección (Casa, Oficina, Dpto, etc.)"
          }
        }
      },
      "ActualizarEstadoPDto": {
        "type": "object",
        "properties": {
          "estado": {
            "enum": [
              "PENDIENTE",
              "EMPAQUETADO",
              "DESPACHO",
              "ENVIO",
              "ENTREGA",
              "BORRADO"
            ],
            "type": "string",
            "description": "Nuevo estado del pedido",
            "example": "EMPAQUETADO"
          }
        },
        "required": [
          "estado"
        ]
      },
      "ProductoActualizarDto": {
        "type": "object",
        "properties": {
          "productoId": {
            "type": "number"
          },
          "cantidad": {
            "type": "number",
            "minimum": 1
          }
        },
        "required": [
          "productoId",
          "cantidad"
        ]
      },
      "ActualizarPedidoDto": {
        "type": "object",
        "properties": {
          "formaPago": {
            "type": "object"
          },
          "moneda": {
            "type": "object"
          },
          "tipoCambio": {
            "type": "number"
          },
          "condVenta": {
            "type": "string"
          },
          "productos": {
            "minItems": 1,
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductoActualizarDto"
            }
          }
        }
      },
      "CuponDto": {
        "type": "object",
        "properties": {
          "descuento": {
            "type": "number",
            "minimum": 1,
            "example": 20,
            "description": "Porcentaje o monto de descuento"
          },
          "tiendaId": {
            "type": "number",
            "minimum": 1,
            "example": 1,
            "description": "ID de la tienda a la que pertenece el cupón"
          },
          "productoId": {
            "type": "number",
            "minimum": 1,
            "example": 3,
            "description": "ID del producto específico (opcional)"
          },
          "validoHasta": {
            "type": "string",
            "example": "2025-12-31T23:59:59Z",
            "description": "Fecha de vencimiento del cupón en formato ISO"
          }
        },
        "required": [
          "descuento",
          "tiendaId",
          "validoHasta"
        ]
      },
      "GenerarTokenDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "Correo electrónico del usuario para generar el token de recuperación",
            "example": "usuario@correo.com"
          }
        },
        "required": [
          "email"
        ]
      },
      "ValidarTokenDto": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Token recibido en el enlace de recuperación",
            "example": "3f9a8b2c4d5e6f7g8h9i0j1k2l3m4n5o"
          }
        },
        "required": [
          "token"
        ]
      },
      "CambiarContrasenaDto": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Token recibido en el enlace de recuperación",
            "example": "3f9a8b2c4d5e6f7g8h9i0j1k2l3m4n5o"
          },
          "nuevaContrasena": {
            "type": "string",
            "minLength": 6,
            "description": "Nueva contraseña del usuario (mínimo 6 caracteres)",
            "example": "miNuevaClave123"
          }
        },
        "required": [
          "token",
          "nuevaContrasena"
        ]
      },
      "OfertaGlobalDto": {
        "type": "object",
        "properties": {
          "titulo": {
            "type": "string",
            "description": "Título de la oferta global",
            "example": "Descuento de verano 2025"
          },
          "descripcion": {
            "type": "string",
            "description": "Descripción de la oferta",
            "example": "Aplica en todos los productos de verano"
          },
          "descuento": {
            "type": "number",
            "minimum": 0,
            "description": "Descuento aplicado en la oferta (número decimal)",
            "example": 15.5
          },
          "validoHasta": {
            "type": "string",
            "description": "Fecha de validez de la oferta en formato ISO",
            "example": "2025-12-31T23:59:59Z"
          },
          "productos": {
            "description": "IDs de los productos a los que se aplicará la oferta",
            "example": [
              1,
              2,
              3
            ],
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        },
        "required": [
          "titulo",
          "descuento",
          "validoHasta"
        ]
      },
      "CrearSerieDto": {
        "type": "object",
        "properties": {
          "tipoDocumento": {
            "type": "string",
            "example": "BOLETA",
            "description": "Tipo de documento"
          },
          "serie": {
            "type": "string",
            "example": "B001",
            "description": "Serie del documento"
          },
          "ultimoNumero": {
            "type": "number",
            "minimum": 0,
            "example": 0,
            "description": "Último número utilizado"
          },
          "activo": {
            "type": "boolean",
            "example": true,
            "description": "Estado activo o inactivo"
          }
        },
        "required": [
          "tipoDocumento",
          "serie",
          "ultimoNumero",
          "activo"
        ]
      },
      "EditarSerieDto": {
        "type": "object",
        "properties": {
          "tipoDocumento": {
            "type": "string",
            "example": "BOLETA",
            "description": "Tipo de documento"
          },
          "serie": {
            "type": "string",
            "example": "B001",
            "description": "Serie del documento"
          },
          "ultimoNumero": {
            "type": "number",
            "minimum": 0,
            "example": 0,
            "description": "Último número utilizado"
          },
          "activo": {
            "type": "boolean",
            "example": true,
            "description": "Estado activo o inactivo"
          }
        }
      }
    }
  }
}